import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, CallbackQueryHandler, Filters, CallbackContext
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8372633951:AAGNZQfYEfVw2qwIE0F3EB1y8hcuOxurBlw")
ADMIN_CHAT_ID = int(os.environ.get("ADMIN_CHAT_ID", "1159623437"))

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ
messages = []
user_sessions = {}

def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", callback_data="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")],
        [InlineKeyboardButton("‚ö†Ô∏è –ñ–∞–ª–æ–±–∞", callback_data="–ñ–∞–ª–æ–±–∞")],
        [InlineKeyboardButton("üöÄ –ò–¥–µ—è", callback_data="–ò–¥–µ—è")],
        [InlineKeyboardButton("üìö –í–æ–ø—Ä–æ—Å", callback_data="–í–æ–ø—Ä–æ—Å")]
    ]
    update.message.reply_text(
        "üéì –ê–Ω–æ–Ω–∏–º–Ω—ã–π –®–∫–æ–ª—å–Ω—ã–π –ë–æ—Ç\n\nüîí –í–°–Å –ê–ù–û–ù–ò–ú–ù–û\n\n–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

def button_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    user_sessions[query.from_user.id] = query.data
    query.edit_message_text(f"üìù {query.data}\n\n–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ:")

def message_handler(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    
    if user_id not in user_sessions:
        update.message.reply_text("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–µ—Ä–µ–∑ /start")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg_data = {
        'id': len(messages) + 1,
        'time': datetime.now().strftime('%H:%M %d.%m'),
        'category': user_sessions[user_id],
        'text': update.message.text,
        'user_id': user_id,
        'username': update.effective_user.username or '–±–µ–∑ username',
        'name': f"{update.effective_user.first_name or ''} {update.effective_user.last_name or ''}".strip()
    }
    messages.append(msg_data)
    
    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    update.message.reply_text(
        f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ!\n\n"
        f"ID: #{msg_data['id']}\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {msg_data['category']}\n\n"
        f"–°–ø–∞—Å–∏–±–æ! üè´"
    )
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    user_info = f"üë§ {msg_data['name']} (@{msg_data['username']})" if msg_data['name'] else f"üë§ @{msg_data['username']}"
    context.bot.send_message(
        ADMIN_CHAT_ID,
        f"üÜï #{msg_data['id']} {msg_data['category']}\n"
        f"üïí {msg_data['time']}\n"
        f"{user_info}\n"
        f"üÜî {msg_data['user_id']}\n\n"
        f"üìù {msg_data['text']}\n\n"
        f"üí¨ /view - –ø—Ä–æ—Å–º–æ—Ç—Ä"
    )
    
    del user_sessions[user_id]

def view_messages(update: Update, context: CallbackContext):
    if update.effective_user.id != ADMIN_CHAT_ID:
        update.message.reply_text("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return
    
    if not messages:
        update.message.reply_text("üì≠ –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
    recent = messages[-5:][::-1]
    response = "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n"
    
    for msg in recent:
        response += (
            f"#{msg['id']} {msg['category']}\n"
            f"üë§ {msg['name']} (@{msg['username']})\n"
            f"üìù {msg['text'][:60]}...\n\n"
        )
    
    response += f"üìä –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}"
    update.message.reply_text(response)

def stats(update: Update, context: CallbackContext):
    if update.effective_user.id != ADMIN_CHAT_ID:
        update.message.reply_text("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return
    
    if not messages:
        update.message.reply_text("üìä –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    categories = {}
    users = set()
    
    for msg in messages:
        categories[msg['category']] = categories.get(msg['category'], 0) + 1
        users.add(msg['user_id'])
    
    stats_text = (
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
        f"‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}\n"
        f"‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π: {len(users)}\n\n"
    )
    
    for category, count in categories.items():
        stats_text += f"‚Ä¢ {category}: {count}\n"
    
    update.message.reply_text(stats_text)

def help_cmd(update: Update, context: CallbackContext):
    if update.effective_user.id == ADMIN_CHAT_ID:
        text = (
            "üëë –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞:\n"
            "/view - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π\n"
            "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
            "üîí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥—É–º–∞—é—Ç —á—Ç–æ –≤—Å—ë –∞–Ω–æ–Ω–∏–º–Ω–æ\n"
            "üëÄ –í—ã –≤–∏–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π"
        )
    else:
        text = "ü§ñ /start - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\nüîí –í—Å—ë –∞–Ω–æ–Ω–∏–º–Ω–æ"
    
    update.message.reply_text(text)

def error_handler(update: Update, context: CallbackContext):
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")

def main():
    # –°–æ–∑–¥–∞–µ–º Updater
    updater = Updater(BOT_TOKEN, use_context=True)
    
    # –ü–æ–ª—É—á–∞–µ–º dispatcher –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp = updater.dispatcher
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("view", view_messages))
    dp.add_handler(CommandHandler("stats", stats))
    dp.add_handler(CommandHandler("help", help_cmd))
    dp.add_handler(CallbackQueryHandler(button_handler))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, message_handler))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render!")
    updater.start_polling()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –¥–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    updater.idle()

if __name__ == '__main__':
    main()
